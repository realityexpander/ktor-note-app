buildscript {
    repositories {
        jcenter()
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'

group 'com.realityexpander'
version '0.0.1' 
mainClassName = "io.ktor.server.netty.EngineMain"

// Generate a jar file - puts results into `./release` directory
jar {
    from {
        configurations.runtimeClasspath.collect { file -> file.isDirectory() ? file : zipTree(file) }
    }
    manifest {
        attributes (
                'Implementation-Title': 'Ktor-server-notes',
                "Main-Class": mainClassName,
                'Implementation-Version': '0.0.1',
                'Implementation-Vendor': 'com.realityexpander',
                'Implementation-Vendor-Id': 'com.realityexpander',
                'Implementation-Vendor-Url': 'https://github.com/realityexpander',
                'Implementation-Description': 'Ktor-server-notes',
                'Implementation-License': 'Apache-2.0',
                'Implementation-License-Url': 'http://www.apache.org/licenses/LICENSE-2.0.html',
        )
    }
    destinationDirectory = file("$rootDir/release")
    archivesBaseName = "app"
}

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
    maven { url 'https://kotlin.bintray.com/kotlin-js-wrappers' }
}

// Compiling for JVM 1.8
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-html-builder:$ktor_version"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"

    // Auth
    implementation "io.ktor:ktor-auth:$ktor_version"

    // Serialization
    implementation "io.ktor:ktor-gson:$ktor_version"

    // Mongo
    implementation "org.litote.kmongo:kmongo:$kmongo_version"
    implementation "org.litote.kmongo:kmongo-coroutine:$kmongo_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_core_version"

    // Encryption / Security
    implementation 'commons-codec:commons-codec:1.14'

    // Network
    implementation "io.ktor:ktor-network-tls:$ktor_version"
}











